/* RC_Bluetooth_2018_v6
 * By:    Khamlek HOMSOMBATH
 * Date:  Jan 17, 2018
 * Download Controller for Android : https://play.google.com/store/apps/details?id=com.lekpkd.duinojoy
 */
 #include <Servo.h>

Servo myservo; 
Servo rotation;
// create servo object to control a servo
// twelve servo objects can be created on most boards

int pos = 0;  // variable to store the servo position
int rot = 0;
int trigPin = 6;    //Trig - green Jumper
int echoPin = 4;    //Echo - yellow Jumper
long duration, cm, inches, Average_cm, Average_in;
#include <SoftwareSerial.h>

// arduino>>bluetooth
// D10 (as RX)   >>>  Tx
// D11 (as TX)  >>>  Rx
SoftwareSerial bluetooth(0, 1); // RX, TX
#define PWMA 3
#define AIN2 7
#define AIN1 8
#define STBY 2
#define BIN1 12
#define BIN2 13
#define PWMB 5

void setup() {
    myservo.attach(10);
    rotation.attach(11);
  Serial.begin(9600); 
  bluetooth.begin(9600);
  
  Serial.begin (9600);
  //Define inputs and outputs
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  
  pinMode(PWMA,OUTPUT); // PWM A
  pinMode(PWMB,OUTPUT); // PWM B
  pinMode(BIN1,OUTPUT); // B
  pinMode(BIN2,OUTPUT); // B
  pinMode(AIN1,OUTPUT); // A
  pinMode(AIN2,OUTPUT); // A
  pinMode(STBY,OUTPUT); // STBY

  digitalWrite(STBY,1);

  analogWrite(PWMA, 0);
  analogWrite(PWMB, 0);
}

String data = "";
void loop() {
  
 // digitalWrite(trigPin, LOW);
//  delayMicroseconds(5);
//  digitalWrite(trigPin, HIGH);
//  delayMicroseconds(10);
//  digitalWrite(trigPin, LOW);
 
  // Read the signal from the sensor: a HIGH pulse whose
  // duration is the time (in microseconds) from the sending
  // of the ping to the reception of its echo off of an object.
//  pinMode(echoPin, INPUT);
//  duration = pulseIn(echoPin, HIGH);
 
  // convert the time into a distance
//  cm = (duration/2) / 29.1;
//  inches = (duration/2) / 74; 
  
//  Serial.print(inches);
//  Serial.print("in, ");
//  Serial.print(cm);
//  Serial.print("cm");
//  Serial.println();
  
//  delay(250);
  while(bluetooth.available()){
    char a = bluetooth.read();
    if(a==')') {
      setData(data);
      data = "";
      return;
    }
    data += a;
  }
}

int ledVal = 0;
void setData(String data){
  data.trim();

  int index = data.indexOf(",");                          //driving
  if(index != -1){
    int angle = data.substring(0,index).toInt();
    int strength = data.substring(index + 1).toInt();

    digitalWrite(BIN1,0);
    digitalWrite(BIN2,0);
    digitalWrite(AIN1,0);
    digitalWrite(AIN2,0);
    if (angle < 180){
      digitalWrite(BIN1,1);
      digitalWrite(AIN1,1);

      if(angle < 90){
        analogWrite(PWMA, strength * 255 / 100);
        analogWrite(PWMB, strength * (angle * 255 / 90) / 100);
      }else if(angle > 90){
        analogWrite(PWMA, strength * ((180 - angle) * 255 / 90) / 100);
        analogWrite(PWMB, strength * 255 / 100);
      }else{
        analogWrite(PWMA, strength * 255 / 100);
        analogWrite(PWMB, strength * 255 / 100);
      }
    }else if(angle > 180){
      digitalWrite(BIN2,1);
      digitalWrite(AIN2,1);
      
      if(angle > 270){
        analogWrite(PWMA, strength * 255 / 100);
        analogWrite(PWMB, strength * ((360 - angle) * 255 / 90) / 100);
      }else if(angle < 270){
        analogWrite(PWMA, strength * ((90 - (270 - angle)) * 255 / 90) / 100);
        analogWrite(PWMB, strength * 255 / 100);
      }else{
        analogWrite(PWMA, strength * 255 / 100);
        analogWrite(PWMB, strength * 255 / 100);
      }
    }
    return;
  }

  if(data.equals("a")){
   pos = 135;
   myservo.write (pos);
Serial.print("135");
delay (20);
return;
  }
  
  if(data.equals("b")){
   pos = 90;
   myservo.write (pos);
//Serial.println("10");
delay (20);
return;
  }

if(data.equals("x")){
rot = rot-20;
rotation.write (rot);
Serial.println("25");
delay (20);
return;
 }
  
  if(data.equals("y")){
   rot = 180;
   rotation.write (rot);
Serial.println("180");
delay (20);
return;
  }
   
  if(data.equals("z")){
   int i=0;
   while (i<10){
    digitalWrite(trigPin, LOW);
    delayMicroseconds(5);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
 
  // Read the signal from the sensor: a HIGH pulse whose
  // duration is the time (in microseconds) from the sending
  // of the ping to the reception of its echo off of an object.
  pinMode(echoPin, INPUT);
  duration = pulseIn(echoPin, HIGH);
 
  // convert the time into a distance
  cm = cm + (duration/2) / 29.1;
  inches = inches + (duration/2) / 74; 
  
  Serial.println(i);
  ++i;
   }

Average_cm = cm/10;
Average_in = inches/10;
  
  Serial.print("in: ");
  Serial.println(Average_in);
  Serial.print('\n');
  Serial.print("cm:");
  Serial.println(Average_cm);
  Serial.print ('\n');


  
  delay(250);
return;
  }
  
  
  Serial.print("Recieved: ");
  Serial.println(data);
}
